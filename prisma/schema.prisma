generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum SubscriptionType {
  payPerJob
  monthly
}

enum Status {
  PROCESSING
  COMPLETED
  FAILED
}
 
enum UserStatus {
  ACTIVE
  INACTIVE
}

enum Interval {
  day
  week
  month
  year
}

enum PaymentStatus {
  PENDING
  COMPLETED
  CANCELED
  REFUNDED
}

enum UserRole {
  USER
  ADMIN
  SUPER_ADMIN
  ENGINEER
  COMPANY
}

model User {
  id                String            @id @default(auto()) @map("_id") @db.ObjectId
  firstName         String
  lastName          String            
  fullName          String?           @default("")
  email             String            @unique
  phone             String           @unique
  password          String
  profilePic        String?           @default("")
  passwordChangedAt DateTime?
  isVerified        Boolean           @default(false)
  isResetPassword   Boolean           @default(false)
  canResetPassword  Boolean           @default(false)
  isResentOtp       Boolean           @default(false)
  role              UserRole          @default(USER)
  status            UserStatus        @default(ACTIVE)
  isSubscribed      Boolean           @default(false)
  planExpiration    DateTime?
  subscriptionType  SubscriptionType?
  teeRegistration   String           @default("")
  vatNumber         String           @default("")
  createdAt         DateTime          @default(now())
  updatedAt         DateTime          @updatedAt
  Subscription      Subscription[]
  Service Service[]
  BillingInfo       BillingInfo?

  @@map("users")
}

// model Service {
//   id          String   @id @default(auto()) @map("_id") @db.ObjectId
//   serviceTitle String
//   serviceName  String @unique
//   serviceDescription String
//   imageUrl    String?
//   createdAt   DateTime @default(now())
//   updatedAt   DateTime @updatedAt

//   @@map("services")
// }

model Service {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  serviceTitle String
  serviceName  String @unique
  serviceDescription String
  imageUrl    String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
 
  createdById         String?   @db.ObjectId
  createdBy           User?     @relation(fields: [createdById], references: [id])
 
  @@map("services")
}

model Subscription {
  id              String        @id @default(auto()) @map("_id") @db.ObjectId
  userId          String        @unique @db.ObjectId
  planId          String        @db.ObjectId
  startDate       DateTime
  endDate         DateTime?
  amount          Float
  stripePaymentId String        @unique
  paymentStatus   PaymentStatus @default(PENDING)
  user            User?         @relation(fields: [userId], references: [id])
  plan            Plan?         @relation(fields: [planId], references: [id])
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt

  @@map("subscriptions")
}

model Plan {
  id            String         @id @default(auto()) @map("_id") @db.ObjectId
  planName      String
  amount        Float
  currency      String?         @default("usd")
  interval      Interval?
  intervalCount Int?
  productId     String
  priceId       String
  active        Boolean? @default(true)
  description   String?
  features      Json?
  Subscription  Subscription[]
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt

  @@map("plans")
}

model BillingInfo {
  id              String   @id @default(auto()) @map("_id") @db.ObjectId
  userId          String   @unique @db.ObjectId
  firstName       String
  lastName        String
  email           String
  phone           String
  country         Country
  addressLine     String
  city            String
  state           String
  zipCode         String
  additionalInfo  String?

  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  user            User     @relation(fields: [userId], references: [id])

  @@map("billing_info")
}

enum Country {
  Afghanistan
  Albania
  Algeria
  Andorra
  Angola
  Antigua_and_Barbuda
  Argentina
  Armenia
  Australia
  Austria
  Azerbaijan
  Bahamas
  Bahrain
  Bangladesh
  Barbados
  Belarus
  Belgium
  Belize
  Benin
  Bhutan
  Bolivia
  Bosnia_and_Herzegovina
  Botswana
  Brazil
  Brunei
  Bulgaria
  Burkina_Faso
  Burundi
  Cambodia
  Cameroon
  Canada
  Cape_Verde
  Central_African_Republic
  Chad
  Chile
  China
  Colombia
  Comoros
  Congo_Brazzaville
  Congo_Kinshasa
  Costa_Rica
  Croatia
  Cuba
  Cyprus
  Czech_Republic
  Denmark
  Djibouti
  Dominica
  Dominican_Republic
  Ecuador
  Egypt
  El_Salvador
  Equatorial_Guinea
  Eritrea
  Estonia
  Eswatini
  Ethiopia
  Fiji
  Finland
  France
  Gabon
  Gambia
  Georgia
  Germany
  Ghana
  Greece
  Grenada
  Guatemala
  Guinea
  Guinea_Bissau
  Guyana
  Haiti
  Honduras
  Hungary
  Iceland
  India
  Indonesia
  Iran
  Iraq
  Ireland
  Israel
  Italy
  Jamaica
  Japan
  Jordan
  Kazakhstan
  Kenya
  Kiribati
  Korea_North
  Korea_South
  Kuwait
  Kyrgyzstan
  Laos
  Latvia
  Lebanon
  Lesotho
  Liberia
  Libya
  Liechtenstein
  Lithuania
  Luxembourg
  Madagascar
  Malawi
  Malaysia
  Maldives
  Mali
  Malta
  Marshall_Islands
  Mauritania
  Mauritius
  Mexico
  Micronesia
  Moldova
  Monaco
  Mongolia
  Montenegro
  Morocco
  Mozambique
  Myanmar
  Namibia
  Nauru
  Nepal
  Netherlands
  New_Zealand
  Nicaragua
  Niger
  Nigeria
  North_Macedonia
  Norway
  Oman
  Pakistan
  Palau
  Palestine
  Panama
  Papua_New_Guinea
  Paraguay
  Peru
  Philippines
  Poland
  Portugal
  Qatar
  Romania
  Russia
  Rwanda
  Saint_Kitts_and_Nevis
  Saint_Lucia
  Saint_Vincent_and_the_Grenadines
  Samoa
  San_Marino
  Sao_Tome_and_Principe
  Saudi_Arabia
  Senegal
  Serbia
  Seychelles
  Sierra_Leone
  Singapore
  Slovakia
  Slovenia
  Solomon_Islands
  Somalia
  South_Africa
  South_Sudan
  Spain
  Sri_Lanka
  Sudan
  Suriname
  Sweden
  Switzerland
  Syria
  Taiwan
  Tajikistan
  Tanzania
  Thailand
  Timor_Leste
  Togo
  Tonga
  Trinidad_and_Tobago
  Tunisia
  Turkey
  Turkmenistan
  Tuvalu
  Uganda
  Ukraine
  United_Arab_Emirates
  United_Kingdom
  United_States
  Uruguay
  Uzbekistan
  Vanuatu
  Vatican_City
  Venezuela
  Vietnam
  Yemen
  Zambia
  Zimbabwe
}


model Project {
  id                         String   @id @default(auto()) @map("_id") @db.ObjectId
  cadastralCode              String?
  type                       String?
  surfaceAreas               String?
  titleDeedArea              String?
  building                   String?
  floor                      String?
  addressBuilding            String?
  buildingCode               String?
  neighborhoodBuilding       String?
  municipalityCommunityBuilding String?

  firstOwnerName             String?
  firstOwnerLastName         String?
  firstOwnerFathersName      String?
  firstOwnerMothersName      String?
  firstOwnerDateOfBirth      DateTime?
  firstOwnerPlaceOfBirth     String?
  firstOwnerAddress          String?
  firstOwnerAddressCode      String?
  firstOwnerAddressMunicipalityCommunity String?
  firstOwnerTIN              String?
  firstOwnerMobile           String?
  firstOwnerEmail            String?

  secondOwnerOwnershipPercentage Float?
  secondOwnerIDNumber        String?
  secondOwnerName            String?
  secondOwnerLastName        String?
  secondOwnerFathersName     String?
  secondOwnerMothersName     String?
  secondOwnerDateOfBirth     DateTime?
  secondOwnerPlaceOfBirth    String?
  secondOwnerAddress         String?
  secondOwnerAddressCode     String?
  secondOwnerAddressMunicipalityCommunity String?
  secondOwnerTIN             String?
  secondOwnerMobile          String?
  secondOwnerEmail           String?

  thirdOwnerOwnershipPercentage Float?
  thirdOwnerIDNumber         String?
  thirdOwnerName             String?
  thirdOwnerLastName         String?
  thirdOwnerFathersName      String?
  thirdOwnerMothersName      String?
  thirdOwnerDateOfBirth      DateTime?
  thirdOwnerPlaceOfBirth     String?
  thirdOwnerAddress          String?
  thirdOwnerAddressCode      String?
  thirdOwnerAddressMunicipalityCommunity String?
  thirdOwnerTIN              String?
  thirdOwnerMobile           String?
  thirdOwnerEmail            String?

  licenseNumber              String?
  licenseNumberRevision      String?
  ydom                       String?
  descriptionHorizontalOwnership String?
  horizontalPropertyDescription String?
  numberEstablishmentHorizontalOwnership String?
  notary                     String?
  squareMetersPlot           Float?
  permitNo                   String?
  dateIssuanceBuildingPermit DateTime?
  detailsIssuingAuthority    String?
  regionalUnit               String?
  peaIssueDate               DateTime?
  peaSecurityNumber          String?
  peaProtocolNumber          String?
  peaEnergyExistingCategory  String?
  peaEstimatedAnnualPrimaryEnergyConsumption Float?
  peaEstimatedAnnualCO2Emissions Float?
  bandValue                  String?
  landUse                    String?
  descriptionArbitraryConstructionsUses String?
  documentAnticipation       String?

  uploadedDocumentUrl String? // Store document (PDF/DOC) URL here
  uploadedCSVUrl      String? // Store CSV file URL

  createdAt                  DateTime @default(now())
  updatedAt                  DateTime @updatedAt

  @@map("projects")
}


